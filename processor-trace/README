Intel(R) Processor Trace Decoder Library
========================================

The Intel Processor Trace (PT) Decoder Library is Intel's reference
implementation for decoding Intel PT.  It can be used as a standalone library or
it can be partially or fully integrated into your tool.

The library comes with a set of sample tools built on top of it and a test
system built on top of the sample tools.  The samples demonstrate how to use the
library and may serve as a starting point for integrating the library into your
tool.


Contents
--------

  README        this file

  libipt        A packet encoder/decoder library


Optional Contents and Samples
-----------------------------

  ptdump        Example implementation of a packet dumper

  ptxed         Example implementation of a trace disassembler

  pttc          A trace test generator

  ptunit        A simple unit test system

  script        A collection of scripts

  doc           A document describing the build
                A document describing how to get started
                A document describing the usage of the decoder library
                A document describing pttc


Dependencies
------------

We use cmake for building.

  cmake         The cross-platform open-source build system.
                http://www.cmake.org


Other packages you need for some of the above optional components.

  check         A unit test framework for C.
                http://sourceforge.net/projects/check

                This is needed for libipt and pttc unit tests.

  xed           The Intel x86 instruction encoder and decoder.
                http://www.pintool.org - version 2.13-62732

                This is needed to build and run the trace disassembler example.

  yasm          The Yasm Modular Assembler
                http://github.com/yasm

                This is needed to run pttc.

  doxygen       Generate documentation from source code
                http://doxygen.org

                This is needed to build documentation.


Maintainers
-----------

  Markus Metzger        <markus.t.metzger@intel.com>
  Thilo Schmitt         <thilo.schmitt@intel.com>
